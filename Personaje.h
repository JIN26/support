#ifndef PERSONAJE_H
#define PERSONAJE_H

#include "Movimiento.h"

#include <iostream>
#include <windows.h>
using namespace std;

const int FIL=14;
const int COL=17;
const int COLTO=6;	
const int TIMEP=100;

template <class T>
class Personaje{
	private:
		T x,y;
		const Movimiento *cont;
	public:
		
		Personaje(T a, T b) : x(a),y(b){
			this->cont = new Movimiento(); 
		}
			
		void setX(T a){
			this->x=a;;
		}

		
		T getX(){
			return this->x;
		}

		T ave();//personajes0 ave 
		T pacman();//personaje pacman 
		void imprimirpersonajes(T matriz[][COL],T vec[][COLTO]/*,int FIL,int COL,int **vec*/);//solo para personajes 
		
		friend void gotoxy(int x, int y);//ubica las cosas en la pantalla
		friend int control(int restar());//controles
};

template <typename T>
T Personaje<T>::ave(){
	int vec[2][COLTO]={
		{177,4,179,16,219,178},
		{ 11,8, 14,14, 15, 11},
	};
	
	int ave0[FIL][COL]= {
		{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
		{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',177,177,177,' ',' ',' ',' '},
		{' ',' ',' ',' ',' ',' ',' ',' ',' ',177,178,178,178,177,' ',' ',' '},
		{177,177,177,177,177,' ',' ',' ',177,178,178,' ',' ',' ',177,' ',' '},
		{177,178,178,178,178,177,177,' ',177,178,178,' ', 4 ,' ',177,' ',' '}, 
		{177,178,178,178,178,178,177,177,178,178,178,' ',' ',' ',179, 16,219},
		{' ',177,178,178,178,178,177,178,178,178,178,' ',' ',177,' ',' ',' '},
		{' ',' ',177,178,178,177,177,178,178,178,178,178,177,' ',' ',' ',' '},
		{' ',' ',177,177,177,177,178,178,178,178,178,178,177,' ',' ',' ',' '},
		{' ',' ',' ',' ',' ',177,178,178,178,178,178,178,177,' ',' ',' ',' '},
		{' ',' ',' ',' ',177,178,178,178,178,178,178,177,' ',' ',' ',' ',' '},
		{' ',' ',' ',' ',177,178,178,177,177,177,177,' ',' ',' ',' ',' ',' '},
		{' ',' ',' ',' ',' ',177,177,' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
	}; 	
					  
	int ave1[FIL][COL]={
 		{' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',177,177,177,' ',' ',' ',' '},
		{' ',' ',' ',' ',' ',' ',' ',' ',' ',177,178,178,178,177,' ',' ',' '},
		{' ',' ',' ',' ',' ',' ',' ',' ',177,178,178,' ',' ',' ',177,' ',' '},
		{' ',' ',' ',' ',' ',' ',' ',' ',177,178,178,' ', 4 ,' ',177,' ',' '}, 
		{' ',' ',' ',' ',' ',' ',' ',177,178,178,178,' ',' ',' ',179, 16,219},
		{' ',' ',' ',' ',' ',' ',177,177,177,178,178,' ',' ',177,' ',' ',' '},
		{' ',' ',' ',' ',' ',177,178,178,178,177,178,178,177,' ',' ',' ',' '},
		{' ',' ',' ',' ',177,178,178,178,178,177,178,178,177,' ',' ',' ',' '},
		{' ',' ',' ',' ',177,178,178,178,177,178,178,178,177,' ',' ',' ',' '},
		{' ',' ',' ',177,178,178,178,178,177,178,178,177,' ',' ',' ',' ',' '},
		{' ',' ',' ',177,178,178,178,177,177,177,177,' ',' ',' ',' ',' ',' '},
		{' ',' ',' ',177,178,178,177,' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
		{' ',' ',' ',' ',177,177,' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
	};
	
	do{
		system("cls");	
		imprimirpersonajes(ave0,vec);
		Sleep(TIMEP);
		system("cls");
		imprimirpersonajes(ave1,vec);
		Sleep(TIMEP);
		
	/*	if(a==0){
			
		}else{
			if(a==1){
			}
		}*/
		//movimiento0(&x,&y);	
		this->cont->autoMovimiento(&x,&y);
	}while(this->x!='0');
	return 1;
}

template <typename T>
T Personaje<T>::pacman(){
	int vec[2][COLTO]={
		{176,178},
		{  9, 14},
	};
	int pacman1[FIL][17]= {
		{' ',' ',' ',176,176,176,176,176,' ',' '},
		{' ',' ',176,178,178,178,178,178,176,' '},
		{' ',176,178,178,178,176,178,178,178,176},
		{176,178,178,178,178,178,178,178,176,' '},
		{176,178,178,178,178,178,178,176,' ',' '},
		{176,178,178,178,178,178,176,' ',' ',' '},
		{176,178,178,178,178,178,178,176,' ',' '},
		{176,178,178,178,178,178,178,178,176,' '},
		{' ',176,178,178,178,178,178,178,178,176},
		{' ',' ',176,178,178,178,178,178,176,' '},
		{' ',' ',' ',176,176,176,176,176,' ',' '},
	}; 		  
	int pacman2[FIL][17]= {
		{' ',' ',' ',176,176,176,176,176,' ',' '},
		{' ',' ',176,178,178,178,178,178,176,' '},
		{' ',176,178,178,178,176,178,178,178,176},
		{176,178,178,178,178,178,178,178,178,176},
		{176,178,178,178,178,178,178,178,178,176},
		{176,178,178,178,178,178,176,176,176,' '},
		{176,178,178,178,178,178,178,178,178,176},
		{176,178,178,178,178,178,178,178,178,176},
		{' ',176,178,178,178,178,178,178,178,176},
		{' ',' ',176,178,178,178,178,178,176,' '},
		{' ',' ',' ',176,176,176,176,176,' ',' '},
	};				  
	int pacman3[FIL][COL]= {
		{' ',' ',176,176,176,176,176,' ',' ',' '},
		{' ',176,178,178,178,178,178,176,' ',' '},
		{176,178,178,178,176,178,178,178,176,' '},
		{' ',176,178,178,178,178,178,178,178,176},
		{' ',' ',176,178,178,178,178,178,178,176},
		{' ',' ',' ',176,178,178,178,178,178,176},
		{' ',' ',176,178,178,178,178,178,178,176},
		{' ',176,178,178,178,178,178,178,178,176},
		{176,178,178,178,178,178,178,178,176,' '},
		{' ',176,178,178,178,178,178,176,' ',' '},
		{' ',' ',176,176,176,176,176,' ',' ',' '},
	};					  
	int pacman4[FIL][COL]= {
		{' ',' ',176,176,176,176,176,' ',' ',' '},
		{' ',176,178,178,178,178,178,176,' ',' '},
		{176,178,178,178,176,178,178,178,176,' '},
		{176,178,178,178,178,178,178,178,178,176},
		{176,178,178,178,178,178,178,178,178,176},
		{' ',176,176,176,178,178,178,178,178,176},
		{176,178,178,178,178,178,178,178,178,176},
		{176,178,178,178,178,178,178,178,178,176},
		{176,178,178,178,178,178,178,178,176,' '},
		{' ',176,178,178,178,178,178,176,' ',' '},
		{' ',' ',176,176,176,176,176,' ',' ',' '}, 
	};					  
	int bol[FIL][COL]= {
		{' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
		{' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
		{' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
		{' ',' ',' ',' ',178,178,' ',' ',' ',' '},
		{' ',' ',' ',178,178,178,178,' ',' ',' '},
		{' ',' ',' ',178,178,178,178,' ',' ',' '},
		{' ',' ',' ',178,178,178,178,' ',' ',' '},
		{' ',' ',' ',' ',178,178,' ',' ',' ',' '},
		{' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
		{' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
		{' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
	};
	do{
		system("cls");
		imprimirpersonajes(pacman1,vec);
		Sleep(TIMEP);
		system("cls");
		imprimirpersonajes(pacman2,vec);
		Sleep(TIMEP);
			
		cont->autoMovimiento(&x,&y);
		int c=0;
		cout<<"\n\n\t\t";
		if(GetAsyncKeyState(VK_SHIFT)){
	       pacman();
	    }
		if(GetAsyncKeyState(VK_ESCAPE)){
			c= 1;
	    }
		if(c==1){
			system("cls");
			x='0';
		}
	}while(this->x!='0');
	return 1;
}

template <class T>
void Personaje<T>::imprimirpersonajes(T matriz[][COL],T vec[][COLTO]){

	for(int i=0, a=x;i<FIL;i++,a++){
		for(int j=0, b=y;j<COL;j++,b+=3){
			for(int k=0;k<COLTO;k++){
				if(matriz[i][j]==vec[0][k]){
					tono(vec[1][k]);
				}
			}
			gotoxy(a,b);	
			cout<<char(matriz[i][j]);
		}
	}
}
#endif

